# Supabase Configuration
EXPO_PUBLIC_SUPABASE_URL=your_supabase_url_here
EXPO_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# Development Configuration
EXPO_PUBLIC_ENVIRONMENT=development

# OpenAI API
EXPO_PUBLIC_OPENAI_API_KEY=your_openai_api_key_here

# Jina AI for scraping meta data.
EXPO_PUBLIC_JINA_AI_API_KEY=your_jina_ai_api_key_here

# X(Twitter) API v2 credentials
EXPO_PUBLIC_X_API_KEY=your_x_api_key_here
EXPO_PUBLIC_X_API_KEY_SECRET=your_x_key_secret_here
EXPO_PUBLIC_X_BEARER_TOKEN=your_x_bearer_token_here
EXPO_PUBLIC_X_ACCESS_TOKEN=your_x_access_token_here
EXPO_PUBLIC_X_ACCESS_TOKEN_SECRET=your_x_access_token_secret_here


# ============================================
# EDGE FUNCTIONS SETUP (For Metadata Extraction)
# ============================================
#
# To enable URL metadata extraction, deploy Supabase Edge Functions:
#
# 1. Install Supabase CLI: npm install -g supabase
# 2. Login: supabase login
# 3. Link to project: supabase link --project-ref YOUR_PROJECT_REF
# 4. Deploy functions: supabase functions deploy
#
# For local development:
# - supabase start
# - supabase functions serve
#
# The app will fallback to basic client-side extraction if Edge Functions fail.
